{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/Formpage.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","abtText","defaultChecked","onClick","toggleMode","htmlFor","placeholder","Alert","style","height","alrt","toLowerCase","role","msg","Formpage","useState","text","setText","myOccur","setTextOccur","myOccurCount","setOccurCount","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","nTxt","toUpperCase","showAlrt","disabled","length","navigator","clipboard","writeText","regex","RegExp","searches","match","split","filter","elem","About","myStyle","myMode","borderColor","undefined","defaultProps","App","setMode","alrtState","setAlrtState","showAlrtState","m","t","setTimeout","window","addEventListener","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8560c0d3.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'  // rfc\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to='/'>{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to='/'>Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to='/about'>{props.abtText}</Link>\r\n              </li>\r\n            </ul>\r\n            <div className=\"form-check form-switch mx-3\">\r\n              <input className=\"form-check-input\" defaultChecked onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className={`form-check-label text-${props.mode===\"light\"?\"dark\":\"light\"}`} htmlFor=\"flexSwitchCheckDefault\"> {props.mode===\"light\"?\"Light\":\"Dark\"} mode</label>\r\n            </div>\r\n            <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-success\" type=\"submit\">Search</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n// this is htmlFor security purpose to declare the type of props passed\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    abtText: PropTypes.string,\r\n}\r\n\r\n// this is htmlFor security purpose to declare the default values of props\r\nNavbar.defaultProps = {\r\n    title: \"No title\",\r\n    abtText: \"No about\",\r\n}","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div style={{height:'60px'}}>\r\n      {props.alrt && <div className={`alert alert-${props.alrt.type.toLowerCase()} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alrt.type}</strong>: {props.alrt.msg}\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function Formpage(props) {\r\n    const [text, setText] = useState(\"\");\r\n    const [myOccur, setTextOccur] = useState(\"\");\r\n    const [myOccurCount, setOccurCount] = useState(0);\r\n\r\n    const onChangeFunc = (event)=>{\r\n        console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const upClick = ()=>{\r\n        console.log(\"Uppercase clicked\");\r\n        let nTxt = text.toUpperCase();\r\n        setText(nTxt);\r\n        props.showAlrt(\"Converted to Uppercase\", \"Success\")\r\n    }\r\n    const downClick = ()=>{\r\n        console.log(\"Lowercase clicked\");\r\n        let nTxt = text.toLowerCase();\r\n        setText(nTxt);\r\n        props.showAlrt(\"Converted to Lowercase\", \"Success\")\r\n    }\r\n    const clearTxt = ()=>{\r\n        console.log(\"Clear clicked\");\r\n        let nTxt = \"\";\r\n        setText(nTxt);\r\n        props.showAlrt(\"Cleared Text\", \"Success\")\r\n    }\r\n    const copyTxt = ()=>{\r\n        console.log(\"Copy clicked\");\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlrt(\"Copied Text to Clipboard\", \"Success\")\r\n    }\r\n    const onChangeFuncOccur = (event)=>{\r\n        console.log(\"On change occur\");\r\n        setTextOccur(event.target.value);\r\n    }\r\n    const countOccur = ()=>{\r\n        console.log(\"Count occurences clicked\");\r\n        let regex = new RegExp(myOccur, 'g')\r\n        let searches = text.match(regex);\r\n        if(searches==null || myOccur.split('').filter((elem)=>{return elem!==''}).length===0){\r\n            setOccurCount(0);\r\n        }\r\n        else{\r\n            setOccurCount(searches.length);\r\n        }\r\n        props.showAlrt(\"Occurences counted successfully\", \"Success\")\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode===\"light\"?\"black\":\"white\"}} >\r\n                <h3>{props.heading}</h3>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={onChangeFunc} style={{color: props.mode===\"light\"?\"black\":\"white\", backgroundColor: props.mode===\"light\"?\"white\":\"#252525\"}} id=\"myTextArea\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={upClick} disabled={text.length===0} >Convert to UpperCase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={downClick} disabled={text.length===0} >Convert to LowerCase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={clearTxt} disabled={text.length===0} >Clear Text</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={copyTxt} disabled={text.length===0} >Copy Text</button>\r\n                <div className=\"my-3\">\r\n                    <textarea className=\"form-control\" style={{color: props.mode===\"light\"?\"black\":\"white\", backgroundColor: props.mode===\"light\"?\"white\":\"#252525\"}} value={myOccur} onChange={onChangeFuncOccur} id=\"myOccurArea\" rows=\"1\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1 my-3\" onClick={countOccur} disabled={myOccur.length===0} >Count occurences</button>\r\n                <p>{myOccurCount}</p>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode===\"light\"?\"black\":\"white\"}} >\r\n                <h3>Your Text summary</h3>\r\n                <p>{text.split(\" \").filter((elem)=>{return elem.length!==0}).length} words, {text.split('').filter((elem)=>{return elem!==' '}).length} charaters</p>\r\n                <p>{0.008 * text.split(\" \").filter((elem)=>{return elem.length!==0}).length} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0 ? text:\"Nothing to preview\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  let myStyle = {\r\n    color: props.myMode==='dark'?'white':'#303030',\r\n    backgroundColor: props.myMode==='dark'?'#303030':'white',\r\n    borderColor: props.myMode==='light'?undefined:'white'\r\n  };\r\n    \r\n  return (\r\n    <div className=\"container mt-3 my-3 py-2 px-3\" style={myStyle}>\r\n      <h2 style={myStyle}>About us</h2>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingOne\" style={myStyle}>\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\" style={myStyle}\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\" style={myStyle}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\" style={myStyle}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport Formpage from './components/Formpage';\nimport About from './components/About';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alrtState, setAlrtState] = useState(null);\n\n  const showAlrtState = (m, t)=>{\n      setAlrtState({\n        msg: m,\n        type: t\n      })\n      setTimeout(() => {\n        setAlrtState(null);\n      }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode==='light'){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#303030\"\n      showAlrtState(\"Dark mode has been enabled\", \"Success\")\n      document.title = \"TextUtils - Dark Mode\";\n      setTimeout(() => {\n        document.title = \"TextUtils - Home\";\n      }, 2000);\n    }else{\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\"\n      showAlrtState(\"Light mode has been enabled\", \"Success\")\n      document.title = \"TextUtils - Light Mode\";\n      setTimeout(() => {\n        document.title = \"TextUtils - Home\";\n      }, 2000);\n    }\n  }\n  {window.addEventListener(\"load\", ()=>{\n    setMode(\"dark\");\n    document.body.style.backgroundColor = \"#303030\"\n  });}\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" abtText=\"Go\" mode={mode} toggleMode={toggleMode} />\n        <Alert alrt={alrtState}/>\n        <Switch>\n            <Route exact path='/about'>\n              <About myMode={mode}/>\n            </Route>\n            <Route exact path='/'>\n                <Formpage heading=\"Enter text to analyse!\" mode={mode} showAlrt={showAlrtState}/>\n            </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}